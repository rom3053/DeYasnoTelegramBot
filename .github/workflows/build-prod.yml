name: Deploy to VPS

on:
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DOCKERHUB_USERNAME: rom3053
      APP_NAME: deyasno
      CONTAINER_NAME: deyasno

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Build the application
      run: dotnet publish -c Release -o ./publish

    - name: Login to DockerHub
      run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

    - name: Build Docker image
      run: |
        docker build -t ${{ env.DOCKERHUB_USERNAME }}/${{ env.APP_NAME }}:latest .

    - name: Push Docker image to Docker Hub
      run: |
        docker push ${{ env.DOCKERHUB_USERNAME }}/${{ env.APP_NAME }}:latest

    - name: Deploy to VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.VPS_PORT }}
        script: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker pull ${{ env.DOCKERHUB_USERNAME }}/${{ env.APP_NAME }}:latest
          docker stop ${{ env.CONTAINER_NAME }} || true
          docker rm ${{ env.CONTAINER_NAME }} || true
          docker run -d --name ${{ env.CONTAINER_NAME }} -p 80:80 ${{ env.DOCKERHUB_USERNAME }}/${{ env.APP_NAME }}:latest
