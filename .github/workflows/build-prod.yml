name: Deploy to VPS

on:
 push:
    branches: [ master ]
 pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      APP_NAME: deyasno
      CONTAINER_NAME: deyasno

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.REP_TOKEN }}

    - name: Set up .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Build the application
      run: dotnet publish -c Release -o ./publish


    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

    # - name: Login to DockerHub
    #   run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

    - name: Build Docker image
      run: |
        docker build -t ${{ env.DOCKERHUB_USERNAME }}/${{ env.APP_NAME }}:latest -f src/DeYasnoTelegramBot/Dockerfile .

    - name: Push Docker image to Docker Hub
      run: |
        docker push ${{ env.DOCKERHUB_USERNAME }}/${{ env.APP_NAME }}:latest

    # - name: Deploy to VPS
    #   uses: appleboy/ssh-action@v1.0.3
    #   with:
    #     host: ${{ secrets.VPS_HOST }}
    #     username: ${{ secrets.VPS_USERNAME }}
    #     password: ${{ secrets.VPS_PASSWORD }}
    #     script: |
    #       docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
    #       docker pull ${{ env.DOCKERHUB_USERNAME }}/${{ env.APP_NAME }}:latest
    #       docker stop ${{ env.CONTAINER_NAME }} || true
    #       docker rm ${{ env.CONTAINER_NAME }} || true
    #       docker run -d --name ${{ env.CONTAINER_NAME }} -p 81:81 ${{ env.DOCKERHUB_USERNAME }}/${{ env.APP_NAME }}:latest
