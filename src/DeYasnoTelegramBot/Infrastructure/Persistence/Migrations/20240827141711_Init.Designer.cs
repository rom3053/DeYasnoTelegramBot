// <auto-generated />
using DeYasnoTelegramBot.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DeYasnoTelegramBot.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240827141711_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DeYasnoTelegramBot.Domain.Entities.Subscriber", b =>
                {
                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<string>("BrowserSessionId")
                        .HasColumnType("text");

                    b.Property<int>("InputStep")
                        .HasColumnType("integer");

                    b.Property<string>("UserCity")
                        .HasColumnType("text");

                    b.Property<string>("UserHouseNumber")
                        .HasColumnType("text");

                    b.Property<string>("UserRegion")
                        .HasColumnType("text");

                    b.Property<string>("UserStreet")
                        .HasColumnType("text");

                    b.HasKey("ChatId");

                    b.ToTable("Subscribers");
                });

            modelBuilder.Entity("DeYasnoTelegramBot.Domain.Entities.Subscriber", b =>
                {
                    b.OwnsOne("System.Collections.Generic.List<DeYasnoTelegramBot.Application.Common.Dtos.YasnoWebScrapper.OutageScheduleDayDto>", "OutageSchedules", b1 =>
                        {
                            b1.Property<long>("SubscriberChatId")
                                .HasColumnType("bigint");

                            b1.Property<int>("Capacity")
                                .HasColumnType("integer");

                            b1.HasKey("SubscriberChatId");

                            b1.ToTable("Subscribers");

                            b1.ToJson("OutageSchedules");

                            b1.WithOwner()
                                .HasForeignKey("SubscriberChatId");
                        });

                    b.Navigation("OutageSchedules");
                });
#pragma warning restore 612, 618
        }
    }
}
